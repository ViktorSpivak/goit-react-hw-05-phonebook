{"version":3,"sources":["components/contactform/contactform.module.css","components/contactlist/contactlist.module.css","components/contactform/alert.module.css","components/app/app.module.css","components/filtr/filtr.module.css","components/contactform/ContactForm.jsx","components/filtr/Filter.jsx","components/contactlist/ContactList.jsx","components/app/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","isExist","numberValidation","value","lastSymbolAdd","split","pop","isNumberValid","length","Number","setState","phoneNumLength","x","splice","join","handleChange","e","target","handleSubmit","preventDefault","props","onFindOverlap","clearSetState","newContact","id","uuidv4","onCheckIn","this","CSSTransition","in","timeout","classNames","styleAlert","onEntered","setTimeout","unmountOnExit","Alert","variant","className","alert","onSubmit","style","phonebookForm","htmlFor","labelStyle","type","onChange","Component","protoTypes","PropTypes","func","isRequired","Filter","filter","findFormId","handleChangeFilter","onFindContact","ContactList","onShowFindRes","onDelete","ListGroup","TransitionGroup","map","key","Item","Row","Col","todo","sm","Button","size","onClick","Phonebook","contacts","isAnimation","handleFindOverlap","newName","some","contact","toLowerCase","handleFindContacts","startsWith","handleDeleteContact","ev","persist","handleCheckIn","localStorage","setItem","JSON","stringify","contactsFromStorage","parse","getItem","container","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.cec1a627.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookForm\":\"contactform_phonebookForm__26Y4A\",\"labelStyle\":\"contactform_labelStyle__2B1sc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"contactlist_todo__ijTob\",\"enter\":\"contactlist_enter__1oeu_\",\"enterActive\":\"contactlist_enterActive__CV1W1\",\"exit\":\"contactlist_exit___IWWw\",\"exitActive\":\"contactlist_exitActive__1gJai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__1aejI\",\"enter\":\"alert_enter__1aP9R\",\"enterActive\":\"alert_enterActive__35cAP\",\"exit\":\"alert_exit__3PzJa\",\"exitActive\":\"alert_exitActive__X05Fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__1carI\",\"enter\":\"app_enter__1EUEU\",\"enterActive\":\"app_enterActive__24q5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"filtr_labelStyle__1Fvau\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./contactform.module.css\";\r\nimport styleAlert from \"./alert.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isExist: false\r\n  };\r\n\r\n  numberValidation = value => {\r\n    const lastSymbolAdd = value.split(\"\").pop();\r\n    const isNumberValid = value.length < 10 && Number(lastSymbolAdd);\r\n    const isDeletePush = value.length < this.state.number.length;\r\n    if (isDeletePush) {\r\n      this.setState({ number: value });\r\n    } else {\r\n      if (isNumberValid || isNumberValid === 0) {\r\n        const phoneNumLength = value.length;\r\n        if (phoneNumLength === 4 || phoneNumLength === 7) {\r\n          let x = value.split(\"\");\r\n          x.splice(phoneNumLength - 1, 0, \"-\");\r\n          x = x.join(\"\");\r\n          value = x;\r\n        }\r\n        this.setState({ number: value });\r\n      }\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    let { name, value } = e.target;\r\n    if (name === \"number\") {\r\n      this.numberValidation(value);\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n  clearSetState() {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    if (this.props.onFindOverlap(name)) {\r\n      this.setState({ isExist: true });\r\n      this.clearSetState();\r\n      return;\r\n    }\r\n\r\n    const newContact = { id: uuidv4(), name, number };\r\n    name && number && this.props.onCheckIn(newContact);\r\n    this.clearSetState();\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={this.state.isExist}\r\n          timeout={1500}\r\n          classNames={styleAlert}\r\n          onEntered={() =>\r\n            setTimeout(() => this.setState({ isExist: false }), 1000)\r\n          }\r\n          unmountOnExit\r\n        >\r\n          <Alert variant=\"danger\" className={styleAlert.alert}>\r\n            Contact already exists!\r\n          </Alert>\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={this.handleSubmit} className={style.phonebookForm}>\r\n          <label htmlFor=\"nameForm\" className={style.labelStyle}>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              id=\"nameForm\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"numberForm\" className={style.labelStyle}>\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              id=\"numberForm\"\r\n            ></input>\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactForm.protoTypes = {\r\n  onFindOverlap: PropTypes.func.isRequired,\r\n  onCheckIn: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./filtr.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default class Filter extends Component {\r\n  state = {\r\n    filter: \"\"\r\n  };\r\n  findFormId = uuidv4();\r\n  handleChangeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n    this.props.onFindContact(e.target.value);\r\n  };\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <label htmlFor=\"findForm\" className={style.labelStyle}>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={this.handleChangeFilter}\r\n          id=\"findForm\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\nFilter.protoTypes = {\r\n  onFindContact: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { ListGroup, Button, Row, Col } from \"react-bootstrap\";\r\nimport style from \"./contactlist.module.css\";\r\n\r\nconst ContactList = ({ onShowFindRes, onDelete }) => (\r\n  <div>\r\n    <ListGroup>\r\n      <TransitionGroup className=\"todo-list\">\r\n        {onShowFindRes.map(({ name, number, id }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={style}>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col className={style.todo}>{name}</Col>\r\n                <Col sm=\"auto\" className={style.todo}>\r\n                  {number}\r\n                </Col>\r\n                <Col sm=\"2\">\r\n                  <Button variant=\"danger\" size=\"sm\" id={id} onClick={onDelete}>\r\n                    &times;\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ListGroup>\r\n  </div>\r\n);\r\n\r\nContactList.protoTypes = {\r\n  onShowFindRes: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../contactform/ContactForm\";\r\nimport Filter from \"../filtr/Filter\";\r\nimport ContactList from \"../contactlist/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./app.module.css\";\r\n\r\nexport class Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      { id: \"id-5\", name: \"ennie kopeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\",\r\n    isAnimation: false\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"contacts\", `${JSON.stringify(this.state.contacts)}`);\r\n  }\r\n  componentDidMount() {\r\n    const contactsFromStorage = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    contactsFromStorage && this.setState({ contacts: contactsFromStorage });\r\n  }\r\n\r\n  handleFindOverlap = newName =>\r\n    this.state.contacts.some(contact =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .some(name => name === newName.toLowerCase())\r\n    );\r\n  handleChangeFilter = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n  handleFindContacts = () =>\r\n    this.state.contacts.filter(contact =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .some(name => name.startsWith(this.state.filter.toLowerCase()))\r\n    );\r\n  handleDeleteContact = ev => {\r\n    ev.persist();\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== ev.target.id)\r\n    }));\r\n  };\r\n  handleCheckIn = newContact => {\r\n    this.setState(state => ({\r\n      contacts: [...state.contacts, newContact]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.container}>\r\n        <CSSTransition\r\n          in={this.state.isAnimation}\r\n          timeout={500}\r\n          classNames={style}\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm\r\n          onCheckIn={this.handleCheckIn}\r\n          onFindOverlap={this.handleFindOverlap}\r\n        />\r\n        <h2>Contacts</h2>\r\n        {this.state.contacts.length > 0 && (\r\n          <Filter onFindContact={this.handleChangeFilter}></Filter>\r\n        )}\r\n        <ContactList\r\n          onShowFindRes={this.handleFindContacts()}\r\n          onDelete={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}